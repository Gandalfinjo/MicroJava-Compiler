
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sat Sep 13 00:32:44 CEST 2025
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Sat Sep 13 00:32:44 CEST 2025
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\176\000\002\003\013\000\002\002\004\000\002\036" +
    "\004\000\002\036\002\000\002\037\011\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\041\004\000" +
    "\002\041\002\000\002\042\006\000\002\004\004\000\002" +
    "\004\002\000\002\005\006\000\002\005\010\000\002\006" +
    "\004\000\002\006\002\000\002\007\004\000\002\007\006" +
    "\000\002\043\004\000\002\043\002\000\002\044\011\000" +
    "\002\045\005\000\002\045\002\000\002\047\004\000\002" +
    "\047\002\000\002\050\004\000\002\050\002\000\002\051" +
    "\007\000\002\052\004\000\002\052\002\000\002\053\003" +
    "\000\002\053\004\000\002\010\004\000\002\010\002\000" +
    "\002\011\007\000\002\012\007\000\002\012\007\000\002" +
    "\031\003\000\002\031\002\000\002\032\006\000\002\033" +
    "\004\000\002\033\002\000\002\034\004\000\002\034\002" +
    "\000\002\035\005\000\002\035\007\000\002\013\003\000" +
    "\002\014\004\000\002\014\002\000\002\015\004\000\002" +
    "\015\010\000\002\015\004\000\002\015\004\000\002\015" +
    "\004\000\002\015\005\000\002\015\007\000\002\015\010" +
    "\000\002\015\011\000\002\015\005\000\002\023\004\000" +
    "\002\023\002\000\002\025\004\000\002\025\002\000\002" +
    "\024\005\000\002\024\002\000\002\016\004\000\002\016" +
    "\007\000\002\017\004\000\002\017\005\000\002\017\003" +
    "\000\002\017\003\000\002\020\005\000\002\020\002\000" +
    "\002\026\004\000\002\027\005\000\002\027\002\000\002" +
    "\030\003\000\002\030\002\000\002\060\004\000\002\061" +
    "\005\000\002\061\002\000\002\056\004\000\002\057\005" +
    "\000\002\057\002\000\002\054\004\000\002\055\004\000" +
    "\002\055\002\000\002\063\005\000\002\063\002\000\002" +
    "\062\004\000\002\062\005\000\002\062\005\000\002\071" +
    "\004\000\002\071\002\000\002\072\004\000\002\064\004" +
    "\000\002\067\004\000\002\067\002\000\002\070\004\000" +
    "\002\065\004\000\002\065\003\000\002\065\003\000\002" +
    "\065\003\000\002\065\005\000\002\065\005\000\002\066" +
    "\005\000\002\066\005\000\002\021\004\000\002\022\005" +
    "\000\002\022\006\000\002\022\002\000\002\073\003\000" +
    "\002\074\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\075\003\000\002\075\003\000\002\075" +
    "\003\000\002\076\003\000\002\076\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\100\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\351\000\004\004\005\001\002\000\004\002\353\001" +
    "\002\000\004\063\006\001\002\000\014\006\ufffe\011\ufffe" +
    "\025\ufffe\056\ufffe\063\ufffe\001\002\000\014\006\ufff5\011" +
    "\010\025\ufff5\056\ufff5\063\ufff5\001\002\000\004\063\016" +
    "\001\002\000\014\006\uffff\011\uffff\025\uffff\056\uffff\063" +
    "\uffff\001\002\000\012\006\uffed\025\uffed\056\uffed\063\016" +
    "\001\002\000\004\063\321\001\002\000\010\006\020\025" +
    "\uffe6\056\uffe6\001\002\000\014\006\ufff6\025\ufff6\056\ufff6" +
    "\057\ufff6\063\ufff6\001\002\000\012\052\uffd2\054\uffd2\056" +
    "\uffd2\063\uffd2\001\002\000\010\006\uffee\025\uffee\056\uffee" +
    "\001\002\000\004\063\306\001\002\000\006\025\022\056" +
    "\024\001\002\000\004\063\276\001\002\000\006\025\uffe7" +
    "\056\uffe7\001\002\000\010\016\uffdf\057\uffdf\063\uffdf\001" +
    "\002\000\010\016\032\057\027\063\016\001\002\000\004" +
    "\063\272\001\002\000\004\002\001\001\002\000\006\056" +
    "\ufff5\063\ufff5\001\002\000\010\016\uffe0\057\uffe0\063\uffe0" +
    "\001\002\000\004\063\033\001\002\000\004\052\034\001" +
    "\002\000\006\053\uffda\063\016\001\002\000\004\053\uffdb" +
    "\001\002\000\004\063\041\001\002\000\004\053\040\001" +
    "\002\000\010\046\uffdc\056\uffdc\063\uffdc\001\002\000\010" +
    "\050\uffd7\053\uffd7\054\042\001\002\000\004\055\053\001" +
    "\002\000\006\050\uffd5\053\uffd5\001\002\000\006\050\045" +
    "\053\uffd9\001\002\000\004\063\016\001\002\000\006\050" +
    "\uffd6\053\uffd6\001\002\000\004\063\050\001\002\000\010" +
    "\050\uffd4\053\uffd4\054\051\001\002\000\004\055\052\001" +
    "\002\000\006\050\uffd3\053\uffd3\001\002\000\006\050\uffd8" +
    "\053\uffd8\001\002\000\006\056\055\063\016\001\002\000" +
    "\026\005\uffd0\007\uffd0\013\uffd0\014\uffd0\015\uffd0\020\uffd0" +
    "\022\uffd0\056\uffd0\057\uffd0\063\uffd0\001\002\000\026\005" +
    "\073\007\063\013\067\014\060\015\071\020\070\022\072" +
    "\056\066\057\057\063\061\001\002\000\010\016\uffde\057" +
    "\uffde\063\uffde\001\002\000\004\052\266\001\002\000\064" +
    "\021\uff92\024\uff92\026\uff92\027\uff92\030\uff92\031\uff92\032" +
    "\uff92\033\uff92\034\uff92\035\uff92\036\uff92\037\uff92\040\uff92" +
    "\041\uff92\042\uff92\043\uff92\044\uff92\045\uff92\046\uff92\050" +
    "\uff92\051\260\052\uff92\053\uff92\054\256\055\uff92\001\002" +
    "\000\012\043\246\044\245\045\242\052\244\001\002\000" +
    "\004\052\232\001\002\000\004\046\231\001\002\000\026" +
    "\005\uffd1\007\uffd1\013\uffd1\014\uffd1\015\uffd1\020\uffd1\022" +
    "\uffd1\056\uffd1\057\uffd1\063\uffd1\001\002\000\026\005\uffd0" +
    "\007\uffd0\013\uffd0\014\uffd0\015\uffd0\020\uffd0\022\uffd0\056" +
    "\uffd0\057\uffd0\063\uffd0\001\002\000\004\052\217\001\002" +
    "\000\004\046\216\001\002\000\022\012\101\027\100\046" +
    "\214\052\115\060\107\061\112\062\104\063\061\001\002" +
    "\000\024\005\073\007\063\013\067\014\060\015\071\020" +
    "\070\022\072\056\066\063\061\001\002\000\004\046\074" +
    "\001\002\000\032\005\uffcd\007\uffcd\010\uffcd\013\uffcd\014" +
    "\uffcd\015\uffcd\020\uffcd\022\uffcd\023\uffcd\056\uffcd\057\uffcd" +
    "\063\uffcd\001\002\000\004\023\076\001\002\000\004\052" +
    "\077\001\002\000\022\012\101\027\100\052\115\053\uffc2" +
    "\060\107\061\112\062\104\063\061\001\002\000\016\012" +
    "\101\052\115\060\107\061\112\062\104\063\061\001\002" +
    "\000\004\063\016\001\002\000\026\033\173\034\170\035" +
    "\176\036\174\037\172\040\171\041\uffaa\042\uffaa\050\uffaa" +
    "\053\uffaa\001\002\000\050\024\166\026\uffb5\027\uffb5\030" +
    "\uffb5\031\uffb5\032\uffb5\033\uffb5\034\uffb5\035\uffb5\036\uffb5" +
    "\037\uffb5\040\uffb5\041\uffb5\042\uffb5\046\uffb5\050\uffb5\052" +
    "\136\053\uffb5\055\uffb5\001\002\000\044\026\uff9c\027\uff9c" +
    "\030\uff9c\031\uff9c\032\uff9c\033\uff9c\034\uff9c\035\uff9c\036" +
    "\uff9c\037\uff9c\040\uff9c\041\uff9c\042\uff9c\046\uff9c\050\uff9c" +
    "\053\uff9c\055\uff9c\001\002\000\006\050\162\053\uffb8\001" +
    "\002\000\012\041\157\042\uffad\050\uffad\053\uffad\001\002" +
    "\000\044\026\uff9a\027\uff9a\030\uff9a\031\uff9a\032\uff9a\033" +
    "\uff9a\034\uff9a\035\uff9a\036\uff9a\037\uff9a\040\uff9a\041\uff9a" +
    "\042\uff9a\046\uff9a\050\uff9a\053\uff9a\055\uff9a\001\002\000" +
    "\036\026\uffa3\027\uffa3\033\uffa3\034\uffa3\035\uffa3\036\uffa3" +
    "\037\uffa3\040\uffa3\041\uffa3\042\uffa3\046\uffa3\050\uffa3\053" +
    "\uffa3\055\uffa3\001\002\000\044\026\uff9f\027\uff9f\030\uff9f" +
    "\031\uff9f\032\uff9f\033\uff9f\034\uff9f\035\uff9f\036\uff9f\037" +
    "\uff9f\040\uff9f\041\uff9f\042\uff9f\046\uff9f\050\uff9f\053\uff9f" +
    "\055\uff9f\001\002\000\044\026\uff9b\027\uff9b\030\uff9b\031" +
    "\uff9b\032\uff9b\033\uff9b\034\uff9b\035\uff9b\036\uff9b\037\uff9b" +
    "\040\uff9b\041\uff9b\042\uff9b\046\uff9b\050\uff9b\053\uff9b\055" +
    "\uff9b\001\002\000\010\042\123\050\uffb0\053\uffb0\001\002" +
    "\000\004\053\120\001\002\000\020\012\101\027\100\052" +
    "\115\060\107\061\112\062\104\063\061\001\002\000\004" +
    "\053\117\001\002\000\044\026\uff98\027\uff98\030\uff98\031" +
    "\uff98\032\uff98\033\uff98\034\uff98\035\uff98\036\uff98\037\uff98" +
    "\040\uff98\041\uff98\042\uff98\046\uff98\050\uff98\053\uff98\055" +
    "\uff98\001\002\000\004\046\121\001\002\000\032\005\uffc7" +
    "\007\uffc7\010\uffc7\013\uffc7\014\uffc7\015\uffc7\020\uffc7\022" +
    "\uffc7\023\uffc7\056\uffc7\057\uffc7\063\uffc7\001\002\000\006" +
    "\050\uffb2\053\uffb2\001\002\000\020\012\101\027\100\052" +
    "\115\060\107\061\112\062\104\063\061\001\002\000\010" +
    "\042\123\050\uffb0\053\uffb0\001\002\000\006\050\uffb1\053" +
    "\uffb1\001\002\000\044\026\uffa1\027\uffa1\030\127\031\131" +
    "\032\130\033\uffa1\034\uffa1\035\uffa1\036\uffa1\037\uffa1\040" +
    "\uffa1\041\uffa1\042\uffa1\046\uffa1\050\uffa1\053\uffa1\055\uffa1" +
    "\001\002\000\016\012\uff87\052\uff87\060\uff87\061\uff87\062" +
    "\uff87\063\uff87\001\002\000\016\012\uff85\052\uff85\060\uff85" +
    "\061\uff85\062\uff85\063\uff85\001\002\000\016\012\uff86\052" +
    "\uff86\060\uff86\061\uff86\062\uff86\063\uff86\001\002\000\044" +
    "\026\uffa0\027\uffa0\030\uffa0\031\uffa0\032\uffa0\033\uffa0\034" +
    "\uffa0\035\uffa0\036\uffa0\037\uffa0\040\uffa0\041\uffa0\042\uffa0" +
    "\046\uffa0\050\uffa0\053\uffa0\055\uffa0\001\002\000\016\012" +
    "\101\052\115\060\107\061\112\062\104\063\061\001\002" +
    "\000\044\026\uff9e\027\uff9e\030\uff9e\031\uff9e\032\uff9e\033" +
    "\uff9e\034\uff9e\035\uff9e\036\uff9e\037\uff9e\040\uff9e\041\uff9e" +
    "\042\uff9e\046\uff9e\050\uff9e\053\uff9e\055\uff9e\001\002\000" +
    "\046\026\uffb5\027\uffb5\030\uffb5\031\uffb5\032\uffb5\033\uffb5" +
    "\034\uffb5\035\uffb5\036\uffb5\037\uffb5\040\uffb5\041\uffb5\042" +
    "\uffb5\046\uffb5\050\uffb5\052\136\053\uffb5\055\uffb5\001\002" +
    "\000\022\012\101\027\100\052\115\053\uffb3\060\107\061" +
    "\112\062\104\063\061\001\002\000\044\026\uff9d\027\uff9d" +
    "\030\uff9d\031\uff9d\032\uff9d\033\uff9d\034\uff9d\035\uff9d\036" +
    "\uff9d\037\uff9d\040\uff9d\041\uff9d\042\uff9d\046\uff9d\050\uff9d" +
    "\053\uff9d\055\uff9d\001\002\000\006\050\144\053\uffa8\001" +
    "\002\000\004\053\uffb4\001\002\000\004\053\143\001\002" +
    "\000\044\026\uffb6\027\uffb6\030\uffb6\031\uffb6\032\uffb6\033" +
    "\uffb6\034\uffb6\035\uffb6\036\uffb6\037\uffb6\040\uffb6\041\uffb6" +
    "\042\uffb6\046\uffb6\050\uffb6\053\uffb6\055\uffb6\001\002\000" +
    "\020\012\101\027\100\052\115\060\107\061\112\062\104" +
    "\063\061\001\002\000\004\053\uffb7\001\002\000\006\050" +
    "\144\053\uffa8\001\002\000\004\053\uffa9\001\002\000\036" +
    "\026\151\027\152\033\uffa7\034\uffa7\035\uffa7\036\uffa7\037" +
    "\uffa7\040\uffa7\041\uffa7\042\uffa7\046\uffa7\050\uffa7\053\uffa7" +
    "\055\uffa7\001\002\000\016\012\uff89\052\uff89\060\uff89\061" +
    "\uff89\062\uff89\063\uff89\001\002\000\016\012\uff88\052\uff88" +
    "\060\uff88\061\uff88\062\uff88\063\uff88\001\002\000\036\026" +
    "\uffa4\027\uffa4\033\uffa4\034\uffa4\035\uffa4\036\uffa4\037\uffa4" +
    "\040\uffa4\041\uffa4\042\uffa4\046\uffa4\050\uffa4\053\uffa4\055" +
    "\uffa4\001\002\000\016\012\101\052\115\060\107\061\112" +
    "\062\104\063\061\001\002\000\036\026\uffa2\027\uffa2\033" +
    "\uffa2\034\uffa2\035\uffa2\036\uffa2\037\uffa2\040\uffa2\041\uffa2" +
    "\042\uffa2\046\uffa2\050\uffa2\053\uffa2\055\uffa2\001\002\000" +
    "\010\042\uffaf\050\uffaf\053\uffaf\001\002\000\020\012\101" +
    "\027\100\052\115\060\107\061\112\062\104\063\061\001" +
    "\002\000\012\041\157\042\uffad\050\uffad\053\uffad\001\002" +
    "\000\010\042\uffae\050\uffae\053\uffae\001\002\000\004\063" +
    "\061\001\002\000\004\053\uffc3\001\002\000\006\050\162" +
    "\053\uffb8\001\002\000\004\053\uffb9\001\002\000\004\063" +
    "\061\001\002\000\032\033\uffa5\034\uffa5\035\uffa5\036\uffa5" +
    "\037\uffa5\040\uffa5\041\uffa5\042\uffa5\046\uffa5\050\uffa5\053" +
    "\uffa5\055\uffa5\001\002\000\020\012\uff8e\027\uff8e\052\uff8e" +
    "\060\uff8e\061\uff8e\062\uff8e\063\uff8e\001\002\000\020\012" +
    "\uff8a\027\uff8a\052\uff8a\060\uff8a\061\uff8a\062\uff8a\063\uff8a" +
    "\001\002\000\020\012\uff8b\027\uff8b\052\uff8b\060\uff8b\061" +
    "\uff8b\062\uff8b\063\uff8b\001\002\000\020\012\uff8f\027\uff8f" +
    "\052\uff8f\060\uff8f\061\uff8f\062\uff8f\063\uff8f\001\002\000" +
    "\020\012\uff8c\027\uff8c\052\uff8c\060\uff8c\061\uff8c\062\uff8c" +
    "\063\uff8c\001\002\000\012\041\uffac\042\uffac\050\uffac\053" +
    "\uffac\001\002\000\020\012\uff8d\027\uff8d\052\uff8d\060\uff8d" +
    "\061\uff8d\062\uff8d\063\uff8d\001\002\000\020\012\101\027" +
    "\100\052\115\060\107\061\112\062\104\063\061\001\002" +
    "\000\012\041\uffab\042\uffab\050\uffab\053\uffab\001\002\000" +
    "\006\052\204\054\202\001\002\000\020\012\101\027\100" +
    "\052\115\060\107\061\112\062\104\063\061\001\002\000" +
    "\044\026\uff99\027\uff99\030\uff99\031\uff99\032\uff99\033\uff99" +
    "\034\uff99\035\uff99\036\uff99\037\uff99\040\uff99\041\uff99\042" +
    "\uff99\046\uff99\050\uff99\053\uff99\055\uff99\001\002\000\022" +
    "\012\101\027\100\052\115\053\uffb3\060\107\061\112\062" +
    "\104\063\061\001\002\000\004\053\206\001\002\000\044" +
    "\026\uff96\027\uff96\030\uff96\031\uff96\032\uff96\033\uff96\034" +
    "\uff96\035\uff96\036\uff96\037\uff96\040\uff96\041\uff96\042\uff96" +
    "\046\uff96\050\uff96\053\uff96\055\uff96\001\002\000\004\055" +
    "\210\001\002\000\044\026\uff97\027\uff97\030\uff97\031\uff97" +
    "\032\uff97\033\uff97\034\uff97\035\uff97\036\uff97\037\uff97\040" +
    "\uff97\041\uff97\042\uff97\046\uff97\050\uff97\053\uff97\055\uff97" +
    "\001\002\000\036\026\uffa3\027\uffa3\033\uffa3\034\uffa3\035" +
    "\uffa3\036\uffa3\037\uffa3\040\uffa3\041\uffa3\042\uffa3\046\uffa3" +
    "\050\uffa3\053\uffa3\055\uffa3\001\002\000\036\026\151\027" +
    "\152\033\uffa6\034\uffa6\035\uffa6\036\uffa6\037\uffa6\040\uffa6" +
    "\041\uffa6\042\uffa6\046\uffa6\050\uffa6\053\uffa6\055\uffa6\001" +
    "\002\000\004\046\215\001\002\000\032\005\uffcb\007\uffcb" +
    "\010\uffcb\013\uffcb\014\uffcb\015\uffcb\020\uffcb\022\uffcb\023" +
    "\uffcb\056\uffcb\057\uffcb\063\uffcb\001\002\000\032\005\uffca" +
    "\007\uffca\010\uffca\013\uffca\014\uffca\015\uffca\020\uffca\022" +
    "\uffca\023\uffca\056\uffca\057\uffca\063\uffca\001\002\000\032" +
    "\005\uffcc\007\uffcc\010\uffcc\013\uffcc\014\uffcc\015\uffcc\020" +
    "\uffcc\022\uffcc\023\uffcc\056\uffcc\057\uffcc\063\uffcc\001\002" +
    "\000\020\012\101\027\100\052\115\060\107\061\112\062" +
    "\104\063\061\001\002\000\006\050\221\053\uffc0\001\002" +
    "\000\004\062\225\001\002\000\004\053\223\001\002\000" +
    "\004\046\224\001\002\000\032\005\uffc8\007\uffc8\010\uffc8" +
    "\013\uffc8\014\uffc8\015\uffc8\020\uffc8\022\uffc8\023\uffc8\056" +
    "\uffc8\057\uffc8\063\uffc8\001\002\000\006\050\221\053\uffc0" +
    "\001\002\000\004\053\uffc1\001\002\000\026\005\073\007" +
    "\063\013\067\014\060\015\071\020\070\022\072\056\066" +
    "\057\230\063\061\001\002\000\032\005\uffc6\007\uffc6\010" +
    "\uffc6\013\uffc6\014\uffc6\015\uffc6\020\uffc6\022\uffc6\023\uffc6" +
    "\056\uffc6\057\uffc6\063\uffc6\001\002\000\032\005\uffcf\007" +
    "\uffcf\010\uffcf\013\uffcf\014\uffcf\015\uffcf\020\uffcf\022\uffcf" +
    "\023\uffcf\056\uffcf\057\uffcf\063\uffcf\001\002\000\020\012" +
    "\101\027\100\052\115\060\107\061\112\062\104\063\061" +
    "\001\002\000\004\053\234\001\002\000\024\005\073\007" +
    "\063\013\067\014\060\015\071\020\070\022\072\056\066" +
    "\063\061\001\002\000\032\005\uffc4\007\uffc4\010\236\013" +
    "\uffc4\014\uffc4\015\uffc4\020\uffc4\022\uffc4\023\uffc4\056\uffc4" +
    "\057\uffc4\063\uffc4\001\002\000\024\005\073\007\063\013" +
    "\067\014\060\015\071\020\070\022\072\056\066\063\061" +
    "\001\002\000\032\005\uffce\007\uffce\010\uffce\013\uffce\014" +
    "\uffce\015\uffce\020\uffce\022\uffce\023\uffce\056\uffce\057\uffce" +
    "\063\uffce\001\002\000\032\005\uffc5\007\uffc5\010\uffc5\013" +
    "\uffc5\014\uffc5\015\uffc5\020\uffc5\022\uffc5\023\uffc5\056\uffc5" +
    "\057\uffc5\063\uffc5\001\002\000\020\012\101\027\100\052" +
    "\115\060\107\061\112\062\104\063\061\001\002\000\010" +
    "\046\uffba\050\uffba\053\uffba\001\002\000\010\046\uffbf\050" +
    "\uffbf\053\uffbf\001\002\000\022\012\101\027\100\052\115" +
    "\053\uffb3\060\107\061\112\062\104\063\061\001\002\000" +
    "\010\046\uffbb\050\uffbb\053\uffbb\001\002\000\020\012\uff90" +
    "\027\uff90\052\uff90\060\uff90\061\uff90\062\uff90\063\uff90\001" +
    "\002\000\004\053\250\001\002\000\010\046\uffbc\050\uffbc" +
    "\053\uffbc\001\002\000\010\046\uffbd\050\uffbd\053\uffbd\001" +
    "\002\000\030\021\254\024\166\026\uffb5\027\uffb5\030\uffb5" +
    "\031\uffb5\032\uffb5\046\uffb5\050\uffb5\052\136\053\uffb5\001" +
    "\002\000\004\063\061\001\002\000\004\063\uff84\001\002" +
    "\000\010\046\uffbe\050\uffbe\053\uffbe\001\002\000\020\012" +
    "\101\027\100\052\115\060\107\061\112\062\104\063\061" +
    "\001\002\000\060\021\uff95\024\uff95\026\uff95\027\uff95\030" +
    "\uff95\031\uff95\032\uff95\033\uff95\034\uff95\035\uff95\036\uff95" +
    "\037\uff95\040\uff95\041\uff95\042\uff95\043\uff95\044\uff95\045" +
    "\uff95\046\uff95\050\uff95\052\uff95\053\uff95\055\uff95\001\002" +
    "\000\004\063\261\001\002\000\064\021\uff92\024\uff92\026" +
    "\uff92\027\uff92\030\uff92\031\uff92\032\uff92\033\uff92\034\uff92" +
    "\035\uff92\036\uff92\037\uff92\040\uff92\041\uff92\042\uff92\043" +
    "\uff92\044\uff92\045\uff92\046\uff92\050\uff92\051\260\052\uff92" +
    "\053\uff92\054\256\055\uff92\001\002\000\060\021\uff94\024" +
    "\uff94\026\uff94\027\uff94\030\uff94\031\uff94\032\uff94\033\uff94" +
    "\034\uff94\035\uff94\036\uff94\037\uff94\040\uff94\041\uff94\042" +
    "\uff94\043\uff94\044\uff94\045\uff94\046\uff94\050\uff94\052\uff94" +
    "\053\uff94\055\uff94\001\002\000\004\055\264\001\002\000" +
    "\064\021\uff92\024\uff92\026\uff92\027\uff92\030\uff92\031\uff92" +
    "\032\uff92\033\uff92\034\uff92\035\uff92\036\uff92\037\uff92\040" +
    "\uff92\041\uff92\042\uff92\043\uff92\044\uff92\045\uff92\046\uff92" +
    "\050\uff92\051\260\052\uff92\053\uff92\054\256\055\uff92\001" +
    "\002\000\060\021\uff93\024\uff93\026\uff93\027\uff93\030\uff93" +
    "\031\uff93\032\uff93\033\uff93\034\uff93\035\uff93\036\uff93\037" +
    "\uff93\040\uff93\041\uff93\042\uff93\043\uff93\044\uff93\045\uff93" +
    "\046\uff93\050\uff93\052\uff93\053\uff93\055\uff93\001\002\000" +
    "\004\063\061\001\002\000\004\053\270\001\002\000\004" +
    "\046\271\001\002\000\032\005\uffc9\007\uffc9\010\uffc9\013" +
    "\uffc9\014\uffc9\015\uffc9\020\uffc9\022\uffc9\023\uffc9\056\uffc9" +
    "\057\uffc9\063\uffc9\001\002\000\004\052\273\001\002\000" +
    "\006\053\uffda\063\016\001\002\000\004\053\275\001\002" +
    "\000\010\046\uffdd\056\uffdd\063\uffdd\001\002\000\004\056" +
    "\277\001\002\000\010\016\uffe3\057\uffe3\063\uffe3\001\002" +
    "\000\010\016\032\057\301\063\016\001\002\000\006\025" +
    "\uffe5\056\uffe5\001\002\000\010\016\uffe4\057\uffe4\063\uffe4" +
    "\001\002\000\010\046\305\056\ufff5\063\ufff5\001\002\000" +
    "\010\016\uffe2\057\uffe2\063\uffe2\001\002\000\010\016\uffe1" +
    "\057\uffe1\063\uffe1\001\002\000\006\017\307\056\uffe8\001" +
    "\002\000\004\063\016\001\002\000\004\056\311\001\002" +
    "\000\010\056\ufff5\057\ufff5\063\ufff5\001\002\000\010\056" +
    "\314\057\uffea\063\016\001\002\000\004\057\317\001\002" +
    "\000\010\016\uffdf\057\uffdf\063\uffdf\001\002\000\010\016" +
    "\032\057\316\063\016\001\002\000\004\057\uffeb\001\002" +
    "\000\010\006\uffec\025\uffec\056\uffec\001\002\000\004\056" +
    "\uffe9\001\002\000\010\046\ufff1\050\ufff1\054\323\001\002" +
    "\000\006\046\334\050\326\001\002\000\004\055\324\001" +
    "\002\000\006\046\ufff1\050\ufff1\001\002\000\006\046\330" +
    "\050\326\001\002\000\004\063\331\001\002\000\006\046" +
    "\ufff2\050\ufff2\001\002\000\014\006\ufff3\025\ufff3\056\ufff3" +
    "\057\ufff3\063\ufff3\001\002\000\010\046\ufff0\050\ufff0\054" +
    "\332\001\002\000\004\055\333\001\002\000\006\046\uffef" +
    "\050\uffef\001\002\000\014\006\ufff4\025\ufff4\056\ufff4\057" +
    "\ufff4\063\ufff4\001\002\000\004\063\336\001\002\000\004" +
    "\043\337\001\002\000\010\060\340\061\343\062\342\001" +
    "\002\000\006\046\ufffa\050\ufffa\001\002\000\006\046\ufff8" +
    "\050\ufff8\001\002\000\006\046\ufffc\050\ufffc\001\002\000" +
    "\006\046\ufffb\050\ufffb\001\002\000\006\046\347\050\345" +
    "\001\002\000\004\063\350\001\002\000\006\046\ufff9\050" +
    "\ufff9\001\002\000\014\006\ufffd\011\ufffd\025\ufffd\056\ufffd" +
    "\063\ufffd\001\002\000\004\043\351\001\002\000\010\060" +
    "\340\061\343\062\342\001\002\000\006\046\ufff7\050\ufff7" +
    "\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\351\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\036\006\001\001\000\006\004\011" +
    "\037\010\001\001\000\004\013\334\001\001\000\002\001" +
    "\001\000\010\005\014\013\012\043\013\001\001\000\002" +
    "\001\001\000\006\044\016\050\020\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\051\022\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\010\024\001\001\000\010\011\030\012\027" +
    "\013\025\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\013\035\031\036\032\034\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\042\001\001\000\002\001" +
    "\001\000\004\034\043\001\001\000\004\035\045\001\001" +
    "\000\004\013\046\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\005\014\013\012\001\001\000" +
    "\004\014\055\001\001\000\010\015\064\016\063\021\061" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\022" +
    "\256\001\001\000\006\017\242\074\240\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\226\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\021\102\062\212\064\107\065\110\001\001\000\010\015" +
    "\074\016\063\021\061\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\021" +
    "\102\025\113\054\105\056\112\060\104\062\101\064\107" +
    "\065\110\001\001\000\010\021\134\064\210\065\110\001" +
    "\001\000\004\013\200\001\001\000\006\055\174\075\176" +
    "\001\001\000\004\027\136\001\001\000\002\001\001\000" +
    "\004\020\162\001\001\000\004\057\155\001\001\000\002" +
    "\001\001\000\004\071\147\001\001\000\004\067\125\001" +
    "\001\000\002\001\001\000\004\061\121\001\001\000\002" +
    "\001\001\000\012\021\102\062\115\064\107\065\110\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\021\102\054" +
    "\105\056\123\062\101\064\107\065\110\001\001\000\004" +
    "\061\124\001\001\000\002\001\001\000\006\070\131\077" +
    "\132\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\021\134\065\133\001" +
    "\001\000\002\001\001\000\004\027\136\001\001\000\016" +
    "\021\102\026\140\030\141\062\137\064\107\065\110\001" +
    "\001\000\002\001\001\000\004\063\144\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\021" +
    "\102\062\145\064\107\065\110\001\001\000\002\001\001" +
    "\000\004\063\146\001\001\000\002\001\001\000\006\072" +
    "\152\076\153\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\021\134\064\154\065\110\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\021\102" +
    "\054\157\062\101\064\107\065\110\001\001\000\004\057" +
    "\160\001\001\000\002\001\001\000\006\016\163\021\061" +
    "\001\001\000\002\001\001\000\004\020\164\001\001\000" +
    "\002\001\001\000\004\021\166\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\021\102\062\177\064\107\065\110\001" +
    "\001\000\002\001\001\000\004\066\202\001\001\000\012" +
    "\021\102\062\206\064\107\065\110\001\001\000\002\001" +
    "\001\000\016\021\102\026\140\030\204\062\137\064\107" +
    "\065\110\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\071\211\001\001" +
    "\000\006\072\152\076\153\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\021\102\062\217\064\107\065\110\001\001\000\004\024" +
    "\221\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\225\001\001\000" +
    "\002\001\001\000\010\015\064\016\063\021\061\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\021\102\054" +
    "\105\056\112\060\232\062\101\064\107\065\110\001\001" +
    "\000\002\001\001\000\010\015\234\016\063\021\061\001" +
    "\001\000\004\023\236\001\001\000\010\015\237\016\063" +
    "\021\061\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\021\251\062\250\064\107\065\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\021\102\026\140\030" +
    "\246\062\137\064\107\065\110\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\027\136\100\252\001\001\000\004" +
    "\021\254\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\021\102\062\262\064\107\065\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\022\261\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\264\001\001" +
    "\000\002\001\001\000\004\021\266\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\013\035\031\273\032\034\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\052\277" +
    "\001\001\000\012\011\303\012\302\013\025\053\301\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\047" +
    "\307\001\001\000\004\013\317\001\001\000\002\001\001" +
    "\000\004\004\311\001\001\000\010\005\014\013\012\045" +
    "\312\001\001\000\002\001\001\000\004\010\314\001\001" +
    "\000\010\011\030\012\027\013\025\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\321" +
    "\001\001\000\004\007\326\001\001\000\002\001\001\000" +
    "\004\006\324\001\001\000\004\007\326\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\040\340\001" +
    "\001\000\002\001\001\000\004\041\343\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\042\345\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\040\351\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	
	if (s != null && s.value != null)
		System.out.println(s.toString() + " " + s.value.toString());
		
	return s;

    }


	public void report_fatal_error(String message, Object info) throws java.lang.Exception {
		done_parsing();
		report_error(message, info);
	}
	
	public void syntax_error(Symbol cur_token) {
		report_error("\nSintaksna greska", cur_token);
	}
	
	public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
		report_fatal_error("Fatalna greska, parsiranje se ne moze nastaviti", cur_token);
	}
	
	public void report_error(String message, Object info) {
		StringBuilder msg = new StringBuilder(message);
		
		if (info instanceof Symbol)
			msg.append(" na liniji ").append(((Symbol)info).left);
		
		System.err.println(msg.toString());
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // Setop ::= UNION 
            {
              Setop RESULT = null;
		 RESULT=new Setop(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(62/*Setop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Mulop ::= PERCENTAGE 
            {
              Mulop RESULT = null;
		 RESULT=new Modulo(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Mulop ::= SLASH 
            {
              Mulop RESULT = null;
		 RESULT=new Division(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Mulop ::= STAR 
            {
              Mulop RESULT = null;
		 RESULT=new Multiplication(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(61/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Addop ::= MINUS 
            {
              Addop RESULT = null;
		 RESULT=new Minus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Addop ::= PLUS 
            {
              Addop RESULT = null;
		 RESULT=new Plus(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(60/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Relop ::= LOWER_EQUAL 
            {
              Relop RESULT = null;
		 RESULT=new LowerEqual(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Relop ::= LOWER 
            {
              Relop RESULT = null;
		 RESULT=new Lower(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Relop ::= HIGHER_EQUAL 
            {
              Relop RESULT = null;
		 RESULT=new HiglerEqual(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Relop ::= HIGHER 
            {
              Relop RESULT = null;
		 RESULT=new Higher(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Relop ::= NOT_EQUAL 
            {
              Relop RESULT = null;
		 RESULT=new NotEquals(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Relop ::= EQUAL 
            {
              Relop RESULT = null;
		 RESULT=new Equals(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(59/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Assignop ::= ASSIGN 
            {
              Assignop RESULT = null;
		 RESULT=new Assignop(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(58/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Label ::= IDENT 
            {
              Label RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Label(I1); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(57/*Label*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // DesignatorTail ::= 
            {
              DesignatorTail RESULT = null;
		 RESULT=new NoDesignatorTail(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*DesignatorTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DesignatorTail ::= OPEN_BRACKET Expr CLOSED_BRACKET DesignatorTail 
            {
              DesignatorTail RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorTail D2 = (DesignatorTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExprDesignatorTail(E1, D2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*DesignatorTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // DesignatorTail ::= DOT IDENT DesignatorTail 
            {
              DesignatorTail RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorTail D2 = (DesignatorTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DotDesignatorTail(I1, D2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*DesignatorTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Designator ::= IDENT DesignatorTail 
            {
              Designator RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorTail D2 = (DesignatorTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Designator(I1, D2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // NewFactorTail ::= OPEN_PARENTHESIS ActParsInner CLOSED_PARENTHESIS 
            {
              NewFactorTail RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsInner A1 = (ActParsInner)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ActParsFactorTail(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*NewFactorTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // NewFactorTail ::= OPEN_BRACKET Expr CLOSED_BRACKET 
            {
              NewFactorTail RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ExprFactorTail(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(52/*NewFactorTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Factor ::= OPEN_PARENTHESIS Expr CLOSED_PARENTHESIS 
            {
              Factor RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ExprFactor(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Factor ::= NEW Type NewFactorTail 
            {
              Factor RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NewFactorTail N2 = (NewFactorTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NewFactor(T1, N2); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Factor ::= BOOL_CONST 
            {
              Factor RESULT = null;
		 RESULT=new BoolFactor(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Factor ::= CHAR_CONST 
            {
              Factor RESULT = null;
		 RESULT=new CharFactor(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Factor ::= NUMBER_CONST 
            {
              Factor RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer N1 = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumFactor(N1); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Factor ::= Designator ActParsOption 
            {
              Factor RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActParsOption A2 = (ActParsOption)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorFactor(D1, A2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(51/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // MulopFactor ::= Mulop Factor 
            {
              MulopFactor RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Mulop M1 = (Mulop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Factor F2 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MulopFactor(M1, F2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(54/*MulopFactor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // MulopFactorList ::= 
            {
              MulopFactorList RESULT = null;
		 RESULT=new NoMulopFactors(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*MulopFactorList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // MulopFactorList ::= MulopFactorList MulopFactor 
            {
              MulopFactorList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MulopFactorList M1 = (MulopFactorList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MulopFactor M2 = (MulopFactor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MulopFactors(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(53/*MulopFactorList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Term ::= Factor MulopFactorList 
            {
              Term RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Factor F1 = (Factor)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MulopFactorList M2 = (MulopFactorList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Term(F1, M2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(50/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // AddopTerm ::= Addop Term 
            {
              AddopTerm RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Addop A1 = (Addop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int T2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int T2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Term T2 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddopTerm(A1, T2); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(56/*AddopTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // AddopTermList ::= 
            {
              AddopTermList RESULT = null;
		 RESULT=new NoAddopTerms(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*AddopTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // AddopTermList ::= AddopTermList AddopTerm 
            {
              AddopTermList RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		AddopTermList A1 = (AddopTermList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AddopTerm A2 = (AddopTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AddopTerms(A1, A2); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(55/*AddopTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Expr ::= Designator MAP Designator 
            {
              Expr RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator D2 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorExpr(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Expr ::= MINUS Term AddopTermList 
            {
              Expr RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Term T1 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AddopTermList A2 = (AddopTermList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NegativeSignExpr(T1, A2); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Expr ::= Term AddopTermList 
            {
              Expr RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Term T1 = (Term)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		AddopTermList A2 = (AddopTermList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NoSignExpr(T1, A2); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(48/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ExprsExtended ::= 
            {
              ExprsExtended RESULT = null;
		 RESULT=new NoExprsExtendedList(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*ExprsExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ExprsExtended ::= COMMA Expr ExprsExtended 
            {
              ExprsExtended RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ExprsExtended E2 = (ExprsExtended)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExprsExtendedList(E1, E2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(49/*ExprsExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // CondFactTail ::= 
            {
              CondFactTail RESULT = null;
		 RESULT=new NoCondFactTail(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*CondFactTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // CondFactTail ::= Relop Expr 
            {
              CondFactTail RESULT = null;
		int R1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int R1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Relop R1 = (Relop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new RelopCondFactTail(R1, E2); RESULT.setLine(R1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(43/*CondFactTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // CondFact ::= Expr CondFactTail 
            {
              CondFact RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFactTail C2 = (CondFactTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondFact(E1, C2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // CondFactList ::= 
            {
              CondFactList RESULT = null;
		 RESULT=new NoCondFacts(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*CondFactList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // CondFactList ::= AND CondFact CondFactList 
            {
              CondFactList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondFact C1 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFactList C2 = (CondFactList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondFacts(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(45/*CondFactList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // CondTerm ::= CondFact CondFactList 
            {
              CondTerm RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondFact C1 = (CondFact)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondFactList C2 = (CondFactList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondTerm(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(44/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // CondTermList ::= 
            {
              CondTermList RESULT = null;
		 RESULT=new NoCondTerms(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*CondTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // CondTermList ::= OR CondTerm CondTermList 
            {
              CondTermList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondTerm C1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTermList C2 = (CondTermList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new CondTerms(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(47/*CondTermList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Condition ::= CondTerm CondTermList 
            {
              Condition RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		CondTerm C1 = (CondTerm)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		CondTermList C2 = (CondTermList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Condition(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(46/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ActParsInner ::= 
            {
              ActParsInner RESULT = null;
		 RESULT=new NoActParamsInner(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*ActParsInner*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ActParsInner ::= ActPars 
            {
              ActParsInner RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ActPars A1 = (ActPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActParamsInner(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*ActParsInner*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ActParsOption ::= 
            {
              ActParsOption RESULT = null;
		 RESULT=new NoActParamsOption(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*ActParsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ActParsOption ::= OPEN_PARENTHESIS ActParsInner CLOSED_PARENTHESIS 
            {
              ActParsOption RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsInner A1 = (ActParsInner)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ActParamsOption(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*ActParsOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ActPars ::= Expr ExprsExtended 
            {
              ActPars RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ExprsExtended E2 = (ExprsExtended)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ActParams(E1, E2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DesignatorStatementList ::= 
            {
              DesignatorStatementList RESULT = null;
		 RESULT=new NoDesignatorStatements(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*DesignatorStatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DesignatorStatementList ::= COMMA DesignatorStatement DesignatorStatementList 
            {
              DesignatorStatementList RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesignatorStatement D1 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorStatementList D2 = (DesignatorStatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new DesignatorStatements(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*DesignatorStatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DesignatorStatementTail ::= DECREMENT 
            {
              DesignatorStatementTail RESULT = null;
		 RESULT=new DecrementDSTail(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*DesignatorStatementTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DesignatorStatementTail ::= INCREMENT 
            {
              DesignatorStatementTail RESULT = null;
		 RESULT=new IncrementDSTail(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*DesignatorStatementTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // DesignatorStatementTail ::= OPEN_PARENTHESIS ActParsInner CLOSED_PARENTHESIS 
            {
              DesignatorStatementTail RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ActParsInner A1 = (ActParsInner)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ActParsDSTail(A1); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*DesignatorStatementTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // DesignatorStatementTail ::= Assignop Expr 
            {
              DesignatorStatementTail RESULT = null;
		int A1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int A1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Assignop A1 = (Assignop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Expr E2 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new AssignopExprDSTail(A1, E2); RESULT.setLine(A1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*DesignatorStatementTail*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // DesignatorStatement ::= Designator Assignop Designator Setop Designator 
            {
              DesignatorStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int A2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int A2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Assignop A2 = (Assignop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int D3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D3 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int S4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Setop S4 = (Setop)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Designator D5 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FixedDesignatorStatement(D1, A2, D3, S4, D5); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // DesignatorStatement ::= Designator DesignatorStatementTail 
            {
              DesignatorStatement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorStatementTail D2 = (DesignatorStatementTail)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new OptionalDesignatorStatement(D1, D2); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // NumConstList ::= 
            {
              NumConstList RESULT = null;
		 RESULT=new NoNumConsts(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*NumConstList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NumConstList ::= COMMA NUMBER_CONST NumConstList 
            {
              NumConstList RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Integer N1 = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		NumConstList N2 = (NumConstList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumConsts(N1, N2); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*NumConstList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // DoWhileOption ::= 
            {
              DoWhileOption RESULT = null;
		 RESULT=new NoDoWhileOption(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*DoWhileOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // DoWhileOption ::= Condition DesignatorStatementList 
            {
              DoWhileOption RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		DesignatorStatementList D2 = (DesignatorStatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new YesDoWhileOption(C1, D2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*DoWhileOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ElseStatement ::= 
            {
              ElseStatement RESULT = null;
		 RESULT=new NoElseStatement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*ElseStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ElseStatement ::= ELSE Statement 
            {
              ElseStatement RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S1 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new YesElseStatement(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*ElseStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Statement ::= OPEN_BRACE StatementList CLOSED_BRACE 
            {
              Statement RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new MultipleStatements(S1); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Statement ::= DO Statement WHILE OPEN_PARENTHESIS DoWhileOption CLOSED_PARENTHESIS SEMICOLON 
            {
              Statement RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Statement S1 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int D2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		DoWhileOption D2 = (DoWhileOption)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new DoWhileStatement(S1, D2); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Statement ::= PRINT OPEN_PARENTHESIS Expr NumConstList CLOSED_PARENTHESIS SEMICOLON 
            {
              Statement RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int N2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int N2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		NumConstList N2 = (NumConstList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new PrintStatement(E1, N2); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Statement ::= READ OPEN_PARENTHESIS Designator CLOSED_PARENTHESIS SEMICOLON 
            {
              Statement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		Designator D1 = (Designator)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new ReadStatement(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Statement ::= RETURN Expr SEMICOLON 
            {
              Statement RESULT = null;
		int E1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int E1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Expr E1 = (Expr)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ReturnExprStatement(E1); RESULT.setLine(E1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Statement ::= RETURN SEMICOLON 
            {
              Statement RESULT = null;
		 RESULT=new ReturnStatement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Statement ::= CONTINUE SEMICOLON 
            {
              Statement RESULT = null;
		 RESULT=new ContinueStatement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Statement ::= BREAK SEMICOLON 
            {
              Statement RESULT = null;
		 RESULT=new BreakStatement(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Statement ::= IF OPEN_PARENTHESIS Condition CLOSED_PARENTHESIS Statement ElseStatement 
            {
              Statement RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Condition C1 = (Condition)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int E3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int E3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ElseStatement E3 = (ElseStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new IfStatement(C1, S2, E3); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Statement ::= DesignatorStatement SEMICOLON 
            {
              Statement RESULT = null;
		int D1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int D1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		DesignatorStatement D1 = (DesignatorStatement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new DesignatorStmt(D1); RESULT.setLine(D1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // StatementList ::= 
            {
              StatementList RESULT = null;
		 RESULT=new NoStatements(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // StatementList ::= StatementList Statement 
            {
              StatementList RESULT = null;
		int S1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S1 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int S2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int S2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Statement S2 = (Statement)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Statements(S1, S2); RESULT.setLine(S1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Type ::= IDENT 
            {
              Type RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new Type(I1); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // FormParamExtended ::= COMMA Type IDENT OPEN_BRACKET CLOSED_BRACKET 
            {
              FormParamExtended RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new FormParamExtendedArary(T1, I2); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*FormParamExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // FormParamExtended ::= COMMA Type IDENT 
            {
              FormParamExtended RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParamExtendedNormal(T1, I2); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*FormParamExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // FormParamExtendedList ::= 
            {
              FormParamExtendedList RESULT = null;
		 RESULT=new NoExtendedFormParamList(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*FormParamExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // FormParamExtendedList ::= FormParamExtendedList FormParamExtended 
            {
              FormParamExtendedList RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		FormParamExtendedList F1 = (FormParamExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormParamExtended F2 = (FormParamExtended)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ExtendedFormParamList(F1, F2); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*FormParamExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // FormParamArray ::= 
            {
              FormParamArray RESULT = null;
		 RESULT=new NoFormArrayBrackets(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*FormParamArray*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // FormParamArray ::= OPEN_BRACKET CLOSED_BRACKET 
            {
              FormParamArray RESULT = null;
		 RESULT=new FormArrayBrackets(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*FormParamArray*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // FormParamList ::= Type IDENT FormParamArray FormParamExtendedList 
            {
              FormParamList RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		FormParamArray F3 = (FormParamArray)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int F4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormParamExtendedList F4 = (FormParamExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParamList(T1, I2, F3, F4); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*FormParamList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // FormPars ::= 
            {
              FormPars RESULT = null;
		 RESULT=new NoFormParams(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FormPars ::= FormParamList 
            {
              FormPars RESULT = null;
		int F1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int F1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		FormParamList F1 = (FormParamList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new FormParams(F1); RESULT.setLine(F1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // MethodSignature ::= VOID IDENT OPEN_PARENTHESIS FormPars CLOSED_PARENTHESIS 
            {
              MethodSignature RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int F2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		FormPars F2 = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VoidMethodSignature(I1, F2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodSignature*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // MethodSignature ::= Type IDENT OPEN_PARENTHESIS FormPars CLOSED_PARENTHESIS 
            {
              MethodSignature RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int F3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int F3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		FormPars F3 = (FormPars)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new TypeMethodSignature(T1, I2, F3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodSignature*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // MethodDecl ::= MethodSignature VarDeclList OPEN_BRACE StatementList CLOSED_BRACE 
            {
              MethodDecl RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		MethodSignature M1 = (MethodSignature)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		VarDeclList V2 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int S3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int S3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		StatementList S3 = (StatementList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new MethodDeclaration(M1, V2, S3); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // MethodDeclList ::= 
            {
              MethodDeclList RESULT = null;
		 RESULT=new NoMethodDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // MethodDeclList ::= MethodDeclList MethodDecl 
            {
              MethodDeclList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M1 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int M2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M2 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new MethodDeclarations(M1, M2); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // InterfaceMember ::= MethodSignature SEMICOLON 
            {
              InterfaceMember RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodSignature M1 = (MethodSignature)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new InterfaceMethodSignature(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*InterfaceMember*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // InterfaceMember ::= MethodDecl 
            {
              InterfaceMember RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		MethodDecl M1 = (MethodDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new InterfaceMethodDeclaration(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*InterfaceMember*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // InterfaceMemberList ::= 
            {
              InterfaceMemberList RESULT = null;
		 RESULT=new NoInterfaceMembers(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*InterfaceMemberList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // InterfaceMemberList ::= InterfaceMemberList InterfaceMember 
            {
              InterfaceMemberList RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		InterfaceMemberList I1 = (InterfaceMemberList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		InterfaceMember I2 = (InterfaceMember)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new InterfaceMembers(I1, I2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*InterfaceMemberList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // InterfaceDecl ::= INTERFACE IDENT OPEN_BRACE InterfaceMemberList CLOSED_BRACE 
            {
              InterfaceDecl RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		InterfaceMemberList I2 = (InterfaceMemberList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new InterfaceDeclaration(I1, I2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*InterfaceDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // InterfaceDeclList ::= 
            {
              InterfaceDeclList RESULT = null;
		 RESULT=new NoInterfaceDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*InterfaceDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // InterfaceDeclList ::= InterfaceDeclList InterfaceDecl 
            {
              InterfaceDeclList RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		InterfaceDeclList I1 = (InterfaceDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		InterfaceDecl I2 = (InterfaceDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new InterfaceDeclarations(I1, I2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*InterfaceDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ExtendsType ::= 
            {
              ExtendsType RESULT = null;
		 RESULT=new NoClassExtension(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*ExtendsType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ExtendsType ::= EXTENDS Type 
            {
              ExtendsType RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassExtension(T1); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*ExtendsType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ClassMemberList ::= 
            {
              ClassMemberList RESULT = null;
		 RESULT=new NoClassMembers(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*ClassMemberList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ClassMemberList ::= OPEN_BRACE MethodDeclList CLOSED_BRACE 
            {
              ClassMemberList RESULT = null;
		int M1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M1 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassMembers(M1); RESULT.setLine(M1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*ClassMemberList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ClassDecl ::= CLASS IDENT ExtendsType OPEN_BRACE VarDeclList ClassMemberList CLOSED_BRACE 
            {
              ClassDecl RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int E2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int E2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ExtendsType E2 = (ExtendsType)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		VarDeclList V3 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassMemberList C4 = (ClassMemberList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ClassDeclaration(I1, E2, V3, C4); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ClassDeclList ::= 
            {
              ClassDeclList RESULT = null;
		 RESULT=new NoClassDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*ClassDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // ClassDeclList ::= ClassDeclList ClassDecl 
            {
              ClassDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ClassDeclList C1 = (ClassDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ClassDecl C2 = (ClassDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ClassDeclarations(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*ClassDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDeclExtended ::= COMMA IDENT OPEN_BRACKET CLOSED_BRACKET 
            {
              VarDeclExtended RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		 RESULT=new VarDeclarationExtendedArray(I1); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*VarDeclExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VarDeclExtended ::= COMMA IDENT 
            {
              VarDeclExtended RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarationExtended(I1); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*VarDeclExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDeclExtendedList ::= 
            {
              VarDeclExtendedList RESULT = null;
		 RESULT=new NoVarDeclarationsExtended(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*VarDeclExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VarDeclExtendedList ::= VarDeclExtendedList VarDeclExtended 
            {
              VarDeclExtendedList RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclExtendedList V1 = (VarDeclExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDeclExtended V2 = (VarDeclExtended)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarationsExtended(V1, V2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*VarDeclExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // VarDecl ::= Type IDENT OPEN_BRACKET CLOSED_BRACKET VarDeclExtendedList SEMICOLON 
            {
              VarDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclExtendedList V3 = (VarDeclExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDeclarationArray(T1, I2, V3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VarDecl ::= Type IDENT VarDeclExtendedList SEMICOLON 
            {
              VarDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclExtendedList V3 = (VarDeclExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new VarDeclaration(T1, I2, V3); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // VarDeclList ::= 
            {
              VarDeclList RESULT = null;
		 RESULT=new NoVarDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // VarDeclList ::= VarDeclList VarDecl 
            {
              VarDeclList RESULT = null;
		int V1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int V1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		VarDeclList V1 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int V2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int V2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		VarDecl V2 = (VarDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new VarDeclarations(V1, V2); RESULT.setLine(V1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ConstDeclExtended ::= COMMA IDENT ASSIGN ConstDeclValue 
            {
              ConstDeclExtended RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDeclValue C2 = (ConstDeclValue)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclarationExtended(I1, C2); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*ConstDeclExtended*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ConstDeclExtendedList ::= 
            {
              ConstDeclExtendedList RESULT = null;
		 RESULT=new NoConstDeclarationsExtended(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ConstDeclExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ConstDeclExtendedList ::= ConstDeclExtendedList ConstDeclExtended 
            {
              ConstDeclExtendedList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclExtendedList C1 = (ConstDeclExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDeclExtended C2 = (ConstDeclExtended)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclarationsExtended(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ConstDeclExtendedList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ConstDeclValue ::= BOOL_CONST 
            {
              ConstDeclValue RESULT = null;
		 RESULT=new BoolConst(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ConstDeclValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ConstDeclValue ::= CHAR_CONST 
            {
              ConstDeclValue RESULT = null;
		 RESULT=new CharConst(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ConstDeclValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ConstDeclValue ::= NUMBER_CONST 
            {
              ConstDeclValue RESULT = null;
		int N1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int N1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		Integer N1 = (Integer)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new NumberConst(N1); RESULT.setLine(N1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*ConstDeclValue*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ConstDecl ::= CONST Type IDENT ASSIGN ConstDeclValue ConstDeclExtendedList SEMICOLON 
            {
              ConstDecl RESULT = null;
		int T1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int T1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		Type T1 = (Type)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int I2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int I2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		String I2 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int C3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left;
		int C3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).right;
		ConstDeclValue C3 = (ConstDeclValue)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).value;
		int C4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclExtendedList C4 = (ConstDeclExtendedList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new ConstDeclaration(T1, I2, C3, C4); RESULT.setLine(T1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ConstDeclList ::= 
            {
              ConstDeclList RESULT = null;
		 RESULT=new NoConstDeclarations(); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ConstDeclList ::= ConstDeclList ConstDecl 
            {
              ConstDeclList RESULT = null;
		int C1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int C1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		ConstDeclList C1 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right;
		ConstDecl C2 = (ConstDecl)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).value;
		 RESULT=new ConstDeclarations(C1, C2); RESULT.setLine(C1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              SyntaxNode RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Program start_val = (Program)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROG IDENT ConstDeclList VarDeclList ClassDeclList InterfaceDeclList OPEN_BRACE MethodDeclList CLOSED_BRACE 
            {
              Program RESULT = null;
		int I1left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left;
		int I1right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).right;
		String I1 = (String)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).value;
		int C2left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left;
		int C2right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).right;
		ConstDeclList C2 = (ConstDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).value;
		int V3left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left;
		int V3right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).right;
		VarDeclList V3 = (VarDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).value;
		int C4left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left;
		int C4right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).right;
		ClassDeclList C4 = (ClassDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).value;
		int I5left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left;
		int I5right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).right;
		InterfaceDeclList I5 = (InterfaceDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).value;
		int M6left = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int M6right = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		MethodDeclList M6 = (MethodDeclList)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		 RESULT=new Program(I1, C2, V3, C4, I5, M6); RESULT.setLine(I1left); 
              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

