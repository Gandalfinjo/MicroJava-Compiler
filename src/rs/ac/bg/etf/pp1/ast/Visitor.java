// generated with ast extension for cup
// version 0.8
// 23/8/2025 17:38:49


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(VarDeclExtended VarDeclExtended);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(DesignatorStatementTail DesignatorStatementTail);
    public void visit(ExprsExtended ExprsExtended);
    public void visit(Relop Relop);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(FormParamArray FormParamArray);
    public void visit(CondTermList CondTermList);
    public void visit(NumConstList NumConstList);
    public void visit(MethodSignature MethodSignature);
    public void visit(InterfaceMember InterfaceMember);
    public void visit(StatementList StatementList);
    public void visit(DesignatorTail DesignatorTail);
    public void visit(FormParamExtended FormParamExtended);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(InterfaceMemberList InterfaceMemberList);
    public void visit(CondFactList CondFactList);
    public void visit(DeclList DeclList);
    public void visit(ConstDeclExtendedList ConstDeclExtendedList);
    public void visit(FormParamExtendedList FormParamExtendedList);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(ElseStatement ElseStatement);
    public void visit(VarDeclExtendedList VarDeclExtendedList);
    public void visit(ConstDeclValue ConstDeclValue);
    public void visit(ClassMember ClassMember);
    public void visit(ExtendsType ExtendsType);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(DoWhileOption DoWhileOption);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ConstDeclExtended ConstDeclExtended);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(NewFactorTail NewFactorTail);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ActParsOption ActParsOption);
    public void visit(ActParsInner ActParsInner);
    public void visit(ClassMemberList ClassMemberList);
    public void visit(CondFactTail CondFactTail);
    public void visit(FormPars FormPars);
    public void visit(AddopTermList AddopTermList);
    public void visit(Setop Setop);
    public void visit(Modulo Modulo);
    public void visit(Division Division);
    public void visit(Multiplication Multiplication);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(LowerEqual LowerEqual);
    public void visit(Lower Lower);
    public void visit(HiglerEqual HiglerEqual);
    public void visit(Higher Higher);
    public void visit(NotEquals NotEquals);
    public void visit(Equals Equals);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(NoDesignatorTail NoDesignatorTail);
    public void visit(ExprDesignatorTail ExprDesignatorTail);
    public void visit(DotDesignatorTail DotDesignatorTail);
    public void visit(Designator Designator);
    public void visit(ActParsFactorTail ActParsFactorTail);
    public void visit(ExprFactorTail ExprFactorTail);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumFactor NumFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(MulopFactor MulopFactor);
    public void visit(NoMulopFactors NoMulopFactors);
    public void visit(MulopFactors MulopFactors);
    public void visit(Term Term);
    public void visit(AddopTerm AddopTerm);
    public void visit(NoAddopTerms NoAddopTerms);
    public void visit(AddopTerms AddopTerms);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(NegativeSignExpr NegativeSignExpr);
    public void visit(NoSignExpr NoSignExpr);
    public void visit(NoExprsExtendedList NoExprsExtendedList);
    public void visit(ExprsExtendedList ExprsExtendedList);
    public void visit(NoCondFactTail NoCondFactTail);
    public void visit(RelopCondFactTail RelopCondFactTail);
    public void visit(CondFact CondFact);
    public void visit(NoCondFacts NoCondFacts);
    public void visit(CondFacts CondFacts);
    public void visit(CondTerm CondTerm);
    public void visit(NoCondTerms NoCondTerms);
    public void visit(CondTerms CondTerms);
    public void visit(Condition Condition);
    public void visit(NoActParamsInner NoActParamsInner);
    public void visit(ActParamsInner ActParamsInner);
    public void visit(NoActParamsOption NoActParamsOption);
    public void visit(ActParamsOption ActParamsOption);
    public void visit(ActParams ActParams);
    public void visit(NoDesignatorStatements NoDesignatorStatements);
    public void visit(DesignatorStatements DesignatorStatements);
    public void visit(DecrementDSTail DecrementDSTail);
    public void visit(IncrementDSTail IncrementDSTail);
    public void visit(ActParsDSTail ActParsDSTail);
    public void visit(AssignopExprDSTail AssignopExprDSTail);
    public void visit(DesignatorStatementError DesignatorStatementError);
    public void visit(FixedDesignatorStatement FixedDesignatorStatement);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(NoNumConsts NoNumConsts);
    public void visit(NumConsts NumConsts);
    public void visit(NoDoWhileOption NoDoWhileOption);
    public void visit(YesDoWhileOption YesDoWhileOption);
    public void visit(NoElseStatement NoElseStatement);
    public void visit(YesElseStatement YesElseStatement);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnExprStatement ReturnExprStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(Type Type);
    public void visit(FormParamExtendedErrorParen FormParamExtendedErrorParen);
    public void visit(FormParamExtendedErrorComma FormParamExtendedErrorComma);
    public void visit(FormParamExtendedArary FormParamExtendedArary);
    public void visit(FormParamExtendedNormal FormParamExtendedNormal);
    public void visit(NoExtendedFormParamList NoExtendedFormParamList);
    public void visit(ExtendedFormParamList ExtendedFormParamList);
    public void visit(NoFormArrayBrackets NoFormArrayBrackets);
    public void visit(FormArrayBrackets FormArrayBrackets);
    public void visit(FormParamList FormParamList);
    public void visit(NoFormParams NoFormParams);
    public void visit(FormParams FormParams);
    public void visit(VoidMethodSignature VoidMethodSignature);
    public void visit(TypeMethodSignature TypeMethodSignature);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(InterfaceMethodSignature InterfaceMethodSignature);
    public void visit(InterfaceMethodDeclaration InterfaceMethodDeclaration);
    public void visit(NoInterfaceMembers NoInterfaceMembers);
    public void visit(InterfaceMembers InterfaceMembers);
    public void visit(InterfaceDeclaration InterfaceDeclaration);
    public void visit(ExtendsTypeError ExtendsTypeError);
    public void visit(NoClassExtension NoClassExtension);
    public void visit(ClassExtension ClassExtension);
    public void visit(NoClassMembers NoClassMembers);
    public void visit(ClassMembers ClassMembers);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclarationExtendedArray VarDeclarationExtendedArray);
    public void visit(VarDeclarationExtended VarDeclarationExtended);
    public void visit(NoVarDeclarationsExtended NoVarDeclarationsExtended);
    public void visit(VarDeclarationsExtended VarDeclarationsExtended);
    public void visit(VarDeclErrorBrace VarDeclErrorBrace);
    public void visit(VarDeclErrorComma VarDeclErrorComma);
    public void visit(VarDeclError VarDeclError);
    public void visit(VarDeclarationArray VarDeclarationArray);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(NoVarDeclarations NoVarDeclarations);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ConstDeclarationExtended ConstDeclarationExtended);
    public void visit(NoConstDeclarationsExtended NoConstDeclarationsExtended);
    public void visit(ConstDeclarationsExtended ConstDeclarationsExtended);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumberConst NumberConst);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(InterfaceD InterfaceD);
    public void visit(ClassD ClassD);
    public void visit(VarD VarD);
    public void visit(ConstD ConstD);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(Declarations Declarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
